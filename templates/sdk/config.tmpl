{{- define "configXmlContainerStructTmpl" }}
type configXmlContainer{{createGoSuffixFromVersion $.Version }} struct {
	XMLName xml.Name `xml:"result"`
	Answer []configXml{{createGoSuffixFromVersion $.Version }} `xml:"system"`
}
{{- end }}

{{- if not .Entry}}
    package {{packageName .GoSdkPath}}

    {{renderImports "config"}}

    {{- RenderApiStructs $ }}

    {{- template "configXmlContainerStructTmpl" Map "Version" nil }}

    {{- range $version := .SupportedVersionRanges }}
      {{- template "configXmlContainerStructTmpl" Map "Version" $version.Minimum }}
    {{- end}}

    {{ RenderXmlContainerNormalizers $ }}

    {{ RenderXmlContainerSpecifiers $ }}

    {{- RenderXmlStructs $ }}

    {{ RenderToXmlMarshallers $ }}

    func Versioning(vn version.Number) (Specifier, Normalizer, error) {
    {{- $numberOfVersions := len .SupportedVersions }}
    {{- if gt $numberOfVersions 1}}
        {{- range $index, $version := .SupportedVersions }}
            {{- if ne $version ""}}
                version{{createGoSuffixFromVersion $version}}, err := version.New("{{$version}}")
                if err != nil {
                return nil, nil, err
                }
            {{- end}}
        {{- end}}
        {{- range $index, $version := .SupportedVersions }}
            {{- if ne $version ""}}
                {{- if eq $index 1}}
                    if vn.Gte(version{{createGoSuffixFromVersion $version}}) {
                    return specifyConfig{{createGoSuffixFromVersion $version}}, &configXmlContainer{{createGoSuffixFromVersion $version}}{}, nil
                {{- else}}
                    } else if vn.Gte(version{{createGoSuffixFromVersion $version}}) {
                    return specifyConfig{{createGoSuffixFromVersion $version}}, &configXmlContainer{{createGoSuffixFromVersion $version}}{}, nil
                {{- end}}
            {{- end}}
        {{- end}}
        } else {
    {{- end}}
    return specifyConfig, &configXmlContainer{}, nil
    {{- if gt $numberOfVersions 1}}
        }
    {{- end}}
    }

    {{- RenderSpecMatchers $ }}
{{- end}}
