# This workflow will build and test a golang project

name: PR CI
run-name: "CI pipeline for PR - (#${{ github.event.number }}) ${{ github.event.pull_request.title }}"

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  ci:
    name: Continuous integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Download Go dependencies
        run: go get  ./... && go mod tidy

      - name: Check if all dependencies were commited
        shell: bash
        run: |
          if [ "$(git status --porcelain)" ]; then 
           git status
           exit 1
          else
           exit 0
          fi

      - name: Build codegen
        run: go build -v ./...

      - name: Test codegen
        run: go test -v ./...
  generate:
    needs: ci
    name: Generate code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Download Go dependencies
        run: go get  ./... && go mod tidy

      - name: Build codegen
        run: go build -v ./...

      - name: Execute codegen for SDK
        run: go run cmd/codegen/main.go -t mksdk

      - name: List Generated Files
        run: |
          echo "Generated Files:"
          ls ../generated/pango
